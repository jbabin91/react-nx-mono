name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    environment: prod
    name: Build and Deploy Job
    env:
      NX_APP_NAME: ${{ vars.NX_APP_NAME }}
      API_URL: ${{ vars.API_URL }}
      NX_CONFIG_ONE: ${{ secrets.NX_CONFIG_ONE }}
      NX_CONFIG_TWO: ${{ secrets.NX_CONFIG_TWO }}
      NX_CONFIG_THREE: ${{ secrets.NX_CONFIG_THREE }}
      INTERNAL_CONFIG: ${{ secrets.INTERNAL_CONFIG }}
    steps:
      - uses: actions/checkout@v3
      - name: Echo Env Variables
        run: |
          echo "NX_APP_NAME=$NX_APP_NAME"
          echo "NX_APP_NAME: ${{ env.NX_APP_NAME }}"
          echo "API_URL: ${{ env.API_URL }}"
          echo "NX_CONFIG_ONE: ${{ env.NX_CONFIG_ONE }}"
          echo "NX_CONFIG_TWO: ${{ env.NX_CONFIG_TWO }}"
          echo "NX_CONFIG_THREE: ${{ env.NX_CONFIG_THREE }}"
          echo "INTERNAL_CONFIG: ${{ env.INTERNAL_CONFIG }}"
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Setup NODE_MODULES cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install deps (with cache)
        run: pnpm install
      - name: Build Web App
        env:
          NX_APP_NAME: ${{ vars.NX_APP_NAME }}
          API_URL: ${{ vars.API_URL }}
          NX_CONFIG_ONE: ${{ secrets.NX_CONFIG_ONE }}
          NX_CONFIG_TWO: ${{ secrets.NX_CONFIG_TWO }}
          NX_CONFIG_THREE: ${{ secrets.NX_CONFIG_THREE }}
          INTERNAL_CONFIG: ${{ secrets.INTERNAL_CONFIG }}
        run: pnpm build
      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_YELLOW_ROCK_06FEED01E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          skip_app_build: true
          app_location: 'dist/apps/web' # App source code path
          api_location: '' # Api source code path - optional
          # output_location: 'dist/apps/web' # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_YELLOW_ROCK_06FEED01E }}
          action: 'close'
          app_location: '/'
